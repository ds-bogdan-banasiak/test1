{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"test1","text":"<p>test1 is a modern data science project built with best practices for quality, security, and maintainability.</p>"},{"location":"#overview","title":"Overview","text":"<p>This project provides a solid foundation for data science applications with:</p> <ul> <li>Modern Python tooling - uv, pytest, ruff, mypy</li> <li>Comprehensive testing - Unit, integration, and end-to-end tests</li> <li>CI/CD pipeline - Automated testing, building, and deployment</li> <li>Code quality - Pre-commit hooks, linting, and type checking</li> <li>Documentation - Comprehensive guides and API documentation</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Quick Start Guide - Local setup, quality checks, tests, docs</li> <li>Development Setup - Configure tools (uv, mise, ruff, mypy, pytest)</li> <li>Project Structure - Monorepo layout and packages</li> </ul>"},{"location":"#development","title":"Development","text":"<ul> <li>Setup - Environment setup, pyproject.toml, mise usage</li> <li>Project Structure - Code organization and workspaces</li> <li>CI/CD - Continuous integration and deployment</li> </ul> <p>To learn how repositories are generated from the template, see the ds-template documentation at <code>https://deepsense-ai.github.io/ds-template/</code>.</p>"},{"location":"quickstart/","title":"Quick Start","text":"<p>Get up and running with test1 in minutes.</p>"},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.13 or higher</li> <li>uv package manager</li> <li>mise toolchain manager</li> <li>Git</li> </ul>"},{"location":"quickstart/#setup","title":"Setup","text":""},{"location":"quickstart/#1-trust-the-project-with-mise","title":"1. Trust the project with mise","text":"<p>This project uses mise for toolchain management. Trust the project to install the required tools:</p> <pre><code>mise trust\n</code></pre>"},{"location":"quickstart/#2-install-dependencies","title":"2. Install dependencies","text":"<pre><code>uv sync --dev\n</code></pre>"},{"location":"quickstart/#3-enable-pre-commit-hooks","title":"3. Enable pre-commit hooks","text":"<pre><code>uv run pre-commit install\n</code></pre>"},{"location":"quickstart/#development","title":"Development","text":""},{"location":"quickstart/#package-management","title":"Package Management","text":"<pre><code># Install dependencies\nuv sync\n\n# Add new dependency\nuv add package-name\n\n# Add dev dependency\nuv add --dev package-name\n</code></pre>"},{"location":"quickstart/#code-quality","title":"Code Quality","text":"<pre><code># Lint and format code\nuv run ruff check .\nuv run ruff format .\n\n# Type checking\nuv run mypy packages/\n\n# Run all quality checks\nuv run pre-commit run --all-files\n</code></pre>"},{"location":"quickstart/#testing","title":"Testing","text":"<pre><code># Run tests\nuv run pytest\n\n# Run with coverage\nuv run pytest --cov\n</code></pre>"},{"location":"quickstart/#documentation","title":"Documentation","text":"<pre><code># Serve docs locally (auto-reload)\nuv run mkdocs serve\n\n# Build static site\nuv run mkdocs build\n</code></pre>"},{"location":"quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Development Setup - Initial environment setup</li> <li>Project Structure - Understanding the codebase</li> <li>CI/CD - Continuous integration and deployment</li> </ul> <p>For details on how projects are generated from the template, see the ds-template documentation.</p>"},{"location":"development/ci_cd/","title":"CI/CD","text":""},{"location":"development/ci_cd/#overview","title":"Overview","text":"<p>The project uses GitHub Actions for automated testing, building, and deployment.</p>"},{"location":"development/ci_cd/#workflows","title":"Workflows","text":""},{"location":"development/ci_cd/#ci-pipeline-githubworkflowsciyml","title":"CI Pipeline (<code>.github/workflows/ci.yml</code>)","text":"<ul> <li>Runs on every push and pull request</li> <li>Tests code quality (ruff, mypy, bandit)</li> <li>Runs test suite with pytest</li> <li>Generates coverage reports</li> <li>Supports Python 3.13, 3.12, 3.11</li> </ul>"},{"location":"development/ci_cd/#release-pipeline-githubworkflowsreleaseyml","title":"Release Pipeline (<code>.github/workflows/release.yml</code>)","text":"<ul> <li>Triggered by version tags (e.g., <code>v1.0.0</code>)</li> <li>Builds and tests the package</li> <li>Publishes to PyPI</li> <li>Creates GitHub releases</li> </ul>"},{"location":"development/ci_cd/#security-pipeline-githubworkflowssecurityyml","title":"Security Pipeline (<code>.github/workflows/security.yml</code>)","text":"<ul> <li>Daily security scanning</li> <li>Dependency vulnerability checks</li> <li>Code security analysis</li> </ul>"},{"location":"development/ci_cd/#local-development","title":"Local Development","text":"<pre><code># Run CI checks locally\nuv run ruff check .\nuv run mypy .\nuv run pytest\nuv run pre-commit run --all-files\n</code></pre>"},{"location":"development/ci_cd/#deployment","title":"Deployment","text":"<pre><code># Create release\ngit tag v1.0.0\ngit push origin v1.0.0\n</code></pre>"},{"location":"development/project_structure/","title":"Project Structure","text":""},{"location":"development/project_structure/#directory-structure","title":"Directory Structure","text":"<pre><code>test1/\n\u251c\u2500\u2500 .github/workflows/         # CI/CD workflows\n\u251c\u2500\u2500 packages/                 # Workspace packages (apps/libs)\n\u2502   \u2514\u2500\u2500 &lt;pkg&gt;/\n\u2502       \u251c\u2500\u2500 pyproject.toml        # Package configuration\n\u2502       \u2514\u2500\u2500 src//   # Package sources\n\u251c\u2500\u2500 docs/                      # Documentation\n\u251c\u2500\u2500 site/                      # Built docs (generated)\n\u251c\u2500\u2500 scripts/                   # Utility scripts\n\u251c\u2500\u2500 mkdocs.yml                 # Docs configuration\n\u251c\u2500\u2500 mise.toml                  # Tool versions and tasks\n\u251c\u2500\u2500 pyproject.toml             # Workspace configuration\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"development/setup/","title":"Development Setup","text":"<p>Initial setup and environment configuration for development.</p>"},{"location":"development/setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.13 or higher</li> <li>uv package manager</li> <li>mise toolchain manager</li> <li>Git</li> </ul>"},{"location":"development/setup/#initial-setup","title":"Initial Setup","text":"<pre><code># Clone the repository\ngit clone &lt;GIT-SSH&gt;\ncd test1\n\n# Trust the project with mise\nmise trust\n\n# Install dependencies\nuv sync\n\n# Enable pre-commit hooks\nuv run pre-commit install\n</code></pre>"},{"location":"development/setup/#verification","title":"Verification","text":"<p>Verify your setup is working:</p> <pre><code># Check tool versions\nmise current\n\n# Run code quality checks\nuv run pre-commit run --all-files\n\n# Run tests\nuv run pytest\n\n# Build documentation\nuv run mkdocs build\n</code></pre>"},{"location":"development/setup/#next-steps","title":"Next Steps","text":"<ul> <li>Project Structure - Understanding the codebase</li> </ul>"}]}